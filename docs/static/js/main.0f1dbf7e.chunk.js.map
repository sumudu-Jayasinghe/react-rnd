{"version":3,"sources":["serviceWorker.ts","layout/TopNav.tsx","home/Home.tsx","rnd/RndHome.tsx","games/GamesHome.tsx","rnd/git-users/SearchForm.tsx","rnd/git-users/User.tsx","rnd/git-users/UsersList.tsx","rnd/git-users/UserView.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Topnav","react_default","a","createElement","className","NavLink","activeClassName","to","exact","Home","style","marginTop","RndHome","GamesHome","SearchForm","props","_useState","useState","_useState2","Object","slicedToArray","searchTerm","setsearchTerm","onSubmit","e","preventDefault","onSearch","type","value","onChange","target","placeholder","User","_ref","_ref$avatar_url","avatar_url","_ref$organizations_ur","organizations_url","_ref$name","name","_ref$created_at","created_at","height","src","padding","UserList","_ref$users","users","map","i","paddingTop","key","User_User","UserView","setUsers","search","asyncToGenerator","regenerator_default","mark","_callee","response","data","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","stop","_x","apply","this","arguments","Fragment","SearchForm_SearchForm","term","then","d","toConsumableArray","console","log","UsersList_UserList","App","BrowserRouter","backgroundColor","borderBottom","TopNav_Topnav","Route","path","component","Component","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f1dbf7e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nexport const Topnav = () => {\r\n  return (\r\n    <ul className='nav nav-pills'>\r\n      <li className='nav-item'>\r\n        <NavLink activeClassName='active' to='/' className='nav-link' exact>\r\n          Home\r\n        </NavLink>\r\n      </li>\r\n      <li className='nav-item'>\r\n        <NavLink activeClassName='active' to='/rnd' className='nav-link'>\r\n          RnD\r\n        </NavLink>\r\n      </li>\r\n      <li className='nav-item'>\r\n        <NavLink activeClassName='active' to='/games' className='nav-link'>\r\n          Games\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Home.css'\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <div className='jumbotron' style={{marginTop:'70px'}}>\r\n      <h1 className='display-4'>Hello, React!</h1>\r\n      <p className='lead'>\r\n        Here you find all the RnD stuff related to React library\r\n      </p>\r\n      <hr className='my-4' />\r\n     \r\n      <NavLink to=\"/rnd\" className=\"lnk-btn btn btn-light btn-lg\">Rnd</NavLink>\r\n      <NavLink to=\"/games\" className=\"lnk-btn btn btn-light btn-lg\">Games</NavLink>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const RndHome = ()=>{\r\n    return (\r\n        <div className='jumbotron' style={{marginTop:'70px'}}>\r\n        <h1 className='display-4'>RnD</h1>\r\n        \r\n        <hr className='my-4' />\r\n       \r\n        <NavLink to=\"/rnd/git\" className=\"lnk-btn btn btn-light btn-lg\">Git User Fetch</NavLink>\r\n        \r\n      </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const GamesHome = ()=>{\r\n    return (\r\n        <div>Games home</div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { checkPropTypes } from 'prop-types';\r\n\r\nexport const SearchForm = (props: any) => {\r\n  const [searchTerm, setsearchTerm] = useState('');\r\n\r\n  const searchHandler = (e: any) => {\r\n    e.preventDefault();\r\n    props.onSearch(searchTerm);\r\n    setsearchTerm('');\r\n  };\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className='card-body'>\r\n        <h5 className='card-title'>Search Github Users</h5>\r\n        <form onSubmit={searchHandler}>\r\n          <div className='form-group'>\r\n            <label>User name</label>\r\n            <input\r\n              type='text'\r\n              value={searchTerm}\r\n              onChange={e => setsearchTerm(e.target.value)}\r\n              className='form-control'\r\n              placeholder='Enter user name'\r\n            />\r\n          </div>\r\n          <button type='submit' className='btn btn-primary'>\r\n            Search\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const User = ({\r\n  avatar_url = '',\r\n  organizations_url = '',\r\n  name = '',\r\n  created_at = ''\r\n}) => {\r\n  return (\r\n    <div className='card' style={{height:'100%'}} >\r\n      <div className='row no-gutters'>\r\n        <div className='col-col-md-3' >\r\n          <img src={avatar_url} className='card-img' style={{padding:'5px'}} />\r\n        </div>\r\n        <div className='col-md-8'>\r\n          <div className='card-body'>\r\n            <h5 className='card-title'>{name}</h5>\r\n            <p className='card-text'>{organizations_url}</p>\r\n            <p className='card-text'>\r\n              <small className='text-muted'>Created {created_at}</small>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { User } from './User';\r\n\r\nexport const UserList = ({users=[]}) => {\r\n  return (\r\n    <div className='row'>\r\n      {users.map((a: any, i: number) => (\r\n        <div className='col-md-6 col-lg-3' style={{paddingTop:'5px'}} key={i}>\r\n          <User {...a}/>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component, useState } from 'react';\r\nimport { SearchForm } from './SearchForm';\r\nimport { UserList } from './UsersList';\r\n\r\nexport const UserView = () => {\r\n  const [users, setUsers] = useState();\r\n\r\n  const search = async (name: string) => {\r\n    let response = await fetch(`https://api.github.com/users/${name}`);\r\n    let data = await response.json();\r\n    return data;\r\n  };\r\n\r\n  const searchHandler = (term: string) => {\r\n    search(term).then(d => {\r\n      setUsers([...(users || []), d]);\r\n      console.log(users);\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className='row'>\r\n        <div className='col-sm-12' style={{ marginTop: '20px' }}>\r\n          <SearchForm onSearch={searchHandler} />\r\n        </div>\r\n      </div>\r\n      <div className='row'>\r\n        <div className='col-sm-12' style={{ marginTop: '20px' }}>\r\n          <UserList users={users} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { Component, useState } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Topnav } from './layout/TopNav';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport { Home } from './home/Home';\r\nimport { RndHome } from './rnd/RndHome';\r\nimport { GamesHome } from './games/GamesHome';\r\nimport { UserView } from './rnd/git-users/UserView';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className='container'>\r\n          <nav\r\n            className='navbar fixed-top navbar-dark'\r\n            style={{\r\n              backgroundColor: '#eeeeee',\r\n              borderBottom: 'solid 1px #c3c3c3'\r\n            }}\r\n          >\r\n            <a className='navbar-brand'>React Labs</a>\r\n            <Topnav />\r\n          </nav>\r\n          <div className='content' style={{ marginTop: '60px' }}>\r\n            <Route path='/' exact component={Home} />\r\n            <Route path='/rnd' exact component={RndHome} />\r\n            <Route path='/rnd/git' exact component={UserView} />\r\n            <Route path='/games' exact component={GamesHome} />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}